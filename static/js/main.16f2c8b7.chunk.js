(this["webpackJsonpalgorithm-visualisations"]=this["webpackJsonpalgorithm-visualisations"]||[]).push([[0],[,,,,,,,,function(e,t,n){e.exports=n(16)},,,,,function(e,t,n){},function(e,t,n){},function(e,t,n){},function(e,t,n){"use strict";n.r(t);var a=n(0),o=n.n(a),r=n(7),i=n.n(r),s=(n(13),n(3)),l=n(1),c=n(2),u=n(5),m=n(4);n(14);function h(e){var t=[];if(e.length<=1)return e;var n=e.slice();return function e(t,n,a,o,r){if(n===a)return;var i=Math.floor((n+a)/2);e(o,n,i,t,r),e(o,i+1,a,t,r),function(e,t,n,a,o,r){var i=t,s=t,l=n+1;for(;s<=n&&l<=a;)r.push([s,l]),r.push([s,l]),o[s]<=o[l]?(r.push([i,o[s]]),e[i++]=o[s++]):(r.push([i,o[l]]),e[i++]=o[l++]);for(;s<=n;)r.push([s,s]),r.push([s,s]),r.push([i,o[s]]),e[i++]=o[s++];for(;l<=a;)r.push([l,l]),r.push([l,l]),r.push([i,o[l]]),e[i++]=o[l++]}(t,n,i,a,o,r)}(e,0,e.length-1,n,t),t}function g(e){var t=[];return e.length<=1?e:(function(e,t,n){for(var a=0;a<t;a++){for(var o=a,r=a+1;r<t;r++)n.push(["comparison1",r,o,a]),n.push(["comparison2",r,o,a]),e[r]<e[o]&&(o=r);p(e,a,o,n)}}(e,e.length,t),t)}function p(e,t,n,a){a.push(["swap",t,n,e[t],e[n]]);var o=e[t];e[t]=e[n],e[n]=o}function f(e){var t=[];return e.length<=1?e:(function e(t,n,a,o){if(n>=a)return;o.push(["comparison1",n]);var r=function(e,t,n,a){var o=e[t],r=t;a.push(["comparison1",t]);for(;t<=n;){for(a.push(["comparison1",r]);e[t]<o&&t<=n;)a.push(["comparison1",t]),a.push(["comparison2",t]),t++;for(;e[n]>o;)a.push(["comparison1",n]),a.push(["comparison2",n]),n--;t<=n&&(d(e,t,n,a),t++,n--)}return a.push(["comparison2",t]),a.push(["comparison2",r]),t}(t,n,a,o);o.push(["comparison2",n]),e(t,n,r-1,o),e(t,r,a,o)}(e,0,e.length-1,t),t)}function d(e,t,n,a){a.push(["comparison3",t,n]),a.push(["comparison4",t,n]),a.push(["swap",t,n,e[t],e[n]]);var o=e[t];e[t]=e[n],e[n]=o}function v(e){var t=[];return e.length<=1?e:(function(e,t,n){!function(e,t,n){for(var a=Math.floor(t/2);a>=0;a--)y(e,a,t,n)}(e,t,n);for(var a=t-1;a>0;a--)b(e,0,a,n),y(e,0,a,n)}(e,e.length,t),t)}function y(e,t,n,a){var o=2*t+1;o<n&&(o+1<n&&e[o]<e[o+1]&&(a.push(["comparison",o,o+1]),a.push(["comparison",o,o+1]),o++),e[t]<e[o]&&(b(e,t,o,a),y(e,o,n,a)))}function b(e,t,n,a){a.push(["comparison",t,n]),a.push(["comparison",t,n]),a.push(["swap",t,n,e[t],e[n]]);var o=e[t];e[t]=e[n],e[n]=o}var E=!1,C=function(e){Object(u.a)(n,e);var t=Object(m.a)(n);function n(e){var a;return Object(l.a)(this,n),(a=t.call(this,e)).AlgorithmInfoElement=o.a.createRef(),a.state={array:[]},a}return Object(c.a)(n,[{key:"componentDidMount",value:function(){this.reset_array()}},{key:"reset_array",value:function(){!0===E&&(E=!1,window.location.reload(!1));var e,t,n=[],a=parseInt(window.innerWidth/20),o=parseInt(window.innerHeight-.25*window.innerHeight);o>730&&(o=730);for(var r=0;r<a;r++)n.push((e=5,t=o,Math.floor(Math.random()*(t-e+1)+e)));this.setState({array:n})}},{key:"selection_sort",value:function(){var e=this;this.toggleBtn(),E=!0,this.AlgorithmInfoElement.current.updateInfo("Selection Sort:","\u03a9(n^2)","\u0398(n^2)","O(n^2)","O(1)","Yes, addition O(1) for auxiliary variables","Yes","Appropriate for small array sizes. Useful if minimizing swaps is desirable");for(var t=g(this.state.array),n=document.getElementsByClassName("array-bar"),a=function(a){var o=n[t[a][1]].style;"comparison1"===t[a][0]?setTimeout((function(){var e=n[t[a][3]].style;o.backgroundColor="white",e.backgroundColor="white"}),2*a):"comparison2"===t[a][0]?setTimeout((function(){a<t.length&&(t[a+1][2]!==t[a][2]&&(n[t[a][3]].style.backgroundColor="#97C54E"));o.backgroundColor="#97C54E"}),2*a):setTimeout((function(){var e=n[t[a][1]].style,o=n[t[a][2]].style;e.height="".concat(t[a][4],"px"),o.height="".concat(t[a][3],"px"),e.backgroundColor="#97C54E",o.backgroundColor="#97C54E"}),2*a),a===t.length-1&&setTimeout((function(){e.toggleBtn(),E=!1}),2*a)},o=0;o<t.length;o++)a(o)}},{key:"insertion_sort",value:function(){var e=this;this.toggleBtn(),E=!0,this.AlgorithmInfoElement.current.updateInfo("Insertion Sort:","\u03a9(n)","\u0398(n^2)","O(n^2)","O(1)","Yes, may need additional O(1) memory","Yes, local adjacent swaps ensure stability","Good choice when data is almost sorted. Can be made slightly faster using a min sentinel.");for(var t=function(e){var t=[];return e.length<=1?e:(function(e,t,n){for(var a=0;a<t;a++){var o=e[a],r=a-1;for(n.push(["comparison1",a]);r>=0&&e[r]>o;)n.push(["comparison1",r]),e[r+1]=e[r],n.push(["changeHeight",r+1,e[r]]),n.push(["comparison2",r]),r--;e[r+1]=o,n.push(["changeHeight",r+1,o]),n.push(["comparison2",a])}}(e,e.length,t),t)}(this.state.array),n=document.getElementsByClassName("array-bar"),a=function(a){var o=n[t[a][1]].style;"comparison1"===t[a][0]?setTimeout((function(){o.backgroundColor="white"}),2*a):"comparison2"===t[a][0]?setTimeout((function(){o.backgroundColor="#97C54E"}),2*a):setTimeout((function(){o.height="".concat(t[a][2],"px")}),2*a),a===t.length-1&&setTimeout((function(){e.toggleBtn(),E=!1}),2*a)},o=0;o<t.length;o++)a(o)}},{key:"merge_sort",value:function(){var e=this;this.toggleBtn(),E=!0,this.AlgorithmInfoElement.current.updateInfo("Merge Sort:","\u03a9(nlogn)","\u0398(nlogn)","O(nlogn)","O(n)","No, requires O(n) auxiliary array + O(logn) stack space if using recursion","Yes, merge keeps relative order with additional book keeping, i.e. left side goes first","Is an excellent choice if stability is required and extra memory cost is low. Guaranteed \u0398(nlogn), highly parallelisable, Multiway Mergesort; excellent for secondary memory");for(var t=h(this.state.array),n=function(n){var a=document.getElementsByClassName("array-bar");if(n%3!==2){var o=Object(s.a)(t[n],2),r=o[0],i=o[1],l=a[r].style,c=a[i].style,u=n%3===0?"white":"#97C54E";setTimeout((function(){l.backgroundColor=u,c.backgroundColor=u}),2*n)}else setTimeout((function(){var e=Object(s.a)(t[n],2),o=e[0],r=e[1];a[o].style.height="".concat(r,"px")}),2*n);n===t.length-1&&setTimeout((function(){e.toggleBtn(),E=!1}),2*n)},a=0;a<t.length;a++)n(a)}},{key:"heap_sort",value:function(){var e=this;this.toggleBtn(),E=!0,this.AlgorithmInfoElement.current.updateInfo("Heap Sort:","\u03a9(nlogn)","\u0398(nlogn)","O(nlogn)","O(1)","Yes, only additional O(1) memory for auxiliary variables","No, non-local swaps break stability","Best choice when low memory footprint is required and guaranteed \u0398(nlogn) performance is needed, i.e security reasons");var t=v(this.state.array),n=document.getElementsByClassName("array-bar");console.log(t.length);for(var a=function(a){"comparison"===t[a][0]?setTimeout((function(){var e,o=n[t[a][1]].style,r=n[t[a][2]].style;e="white"===o.backgroundColor?"#97C54E":"white",o.backgroundColor=e,r.backgroundColor=e}),2*a):setTimeout((function(){var e=n[t[a][1]].style,o=n[t[a][2]].style;e.height="".concat(t[a][4],"px"),o.height="".concat(t[a][3],"px")}),2*a),a===t.length-1&&setTimeout((function(){e.toggleBtn(),E=!1}),2*a)},o=0;o<t.length;o++)a(o)}},{key:"quick_sort",value:function(){var e=this;this.toggleBtn(),E=!0,this.AlgorithmInfoElement.current.updateInfo("Quick Sort:","\u03a9(nlogn)","\u0398(nlogn)","O(n^2)","O(logn)","Yes, but still requires O(logn) memory for the stack","No, non-local swaps break stability","Fastest sorting algorithm in most cases. Is the algorithm of choice when speed matters and stability is not required. In practice it is best to choose the pivot at random to avoid worst case and potential attacks");for(var t=f(this.state.array),n=document.getElementsByClassName("array-bar"),a=function(a){var o=n[t[a][1]].style;"comparison1"===t[a][0]?setTimeout((function(){o.backgroundColor="white"}),2*a):"comparison2"===t[a][0]?setTimeout((function(){o.backgroundColor="#97C54E"}),2*a):"comparison3"===t[a][0]?setTimeout((function(){var e=n[t[a][2]].style;o.backgroundColor="white",e.backgroundColor="white"}),2*a):"comparison4"===t[a][0]?setTimeout((function(){var e=n[t[a][2]].style;o.backgroundColor="#97C54E",e.backgroundColor="#97C54E"}),2*a):setTimeout((function(){o.height="".concat(t[a][4],"px"),n[t[a][2]].style.height="".concat(t[a][3],"px")}),2*a),a===t.length-1&&setTimeout((function(){e.toggleBtn(),E=!1}),2*a)},o=0;o<t.length;o++)a(o)}},{key:"toggleBtn",value:function(){for(var e=["selectionSortBtn","insertionSortBtn","mergeSortBtn","heapSortBtn","quickSortBtn"],t=0;t<e.length;t++){var n=document.getElementById(e[t]);n.disabled=!n.disabled}}},{key:"render",value:function(){var e=this,t=this.state.array;return o.a.createElement(o.a.Fragment,null,o.a.createElement("div",{className:"header"},o.a.createElement("h1",null,"Sorting Algorithm Visualiser"),o.a.createElement("p",null,"Created by Jason Rising"),o.a.createElement("div",{className:"nav-bar"},o.a.createElement("button",{id:"resetBtn",onClick:function(){return e.reset_array()}},"Randomise Array"),o.a.createElement("button",{id:"selectionSortBtn",onClick:function(){return e.selection_sort()}},"Selection Sort"),o.a.createElement("button",{id:"insertionSortBtn",onClick:function(){return e.insertion_sort()}},"Insertion Sort"),o.a.createElement("button",{id:"mergeSortBtn",onClick:function(){return e.merge_sort()}},"Merge Sort"),o.a.createElement("button",{id:"heapSortBtn",onClick:function(){return e.heap_sort()}},"Heap Sort"),o.a.createElement("button",{id:"quickSortBtn",onClick:function(){return e.quick_sort()}},"Quick Sort"))),o.a.createElement("div",{className:"array-container"},t.map((function(e,t){return o.a.createElement("div",{className:"array-bar",key:t,style:{height:"".concat(e,"px")}})}))),o.a.createElement(k,{ref:this.AlgorithmInfoElement}))}}]),n}(o.a.Component),k=function(e){Object(u.a)(n,e);var t=Object(m.a)(n);function n(){var e;Object(l.a)(this,n);for(var a=arguments.length,o=new Array(a),r=0;r<a;r++)o[r]=arguments[r];return(e=t.call.apply(t,[this].concat(o))).state={name:"No Algorithm Selected",bestCase:"",avgCase:"",worstCase:"",spaceC:"",inPlace:"",stable:"",misc:""},e}return Object(c.a)(n,[{key:"updateInfo",value:function(e,t,n,a,o,r,i,s){this.setState({name:e,bestCase:t,avgCase:n,worstCase:a,spaceC:o,inPlace:r,stable:i,misc:s})}},{key:"render",value:function(){return o.a.createElement("div",{className:"info-container"},o.a.createElement("h1",null,this.state.name),o.a.createElement("div",{className:"grid"},o.a.createElement("div",null,o.a.createElement("h1",null,"Time Complexity"),o.a.createElement("p",null,o.a.createElement("strong",null,"Best Case: "),this.state.bestCase),o.a.createElement("p",null,o.a.createElement("strong",null,"Average Case: "),this.state.avgCase),o.a.createElement("p",null,o.a.createElement("strong",null,"Worst Case: "),this.state.worstCase)),o.a.createElement("div",null,o.a.createElement("h1",null,"Space Complexity"),o.a.createElement("p",null,o.a.createElement("strong",null,"Worst Case: "),this.state.spaceC)),o.a.createElement("div",null,o.a.createElement("h1",null,"General Info"),o.a.createElement("p",null,o.a.createElement("strong",null,"In-place: "),this.state.inPlace),o.a.createElement("p",null,o.a.createElement("strong",null,"Stable: "),this.state.stable),o.a.createElement("p",null,o.a.createElement("strong",null,"Misc: "),this.state.misc))))}}]),n}(o.a.Component);n(15);var w=function(){return o.a.createElement("div",{className:"App"},o.a.createElement(C,null))};Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));i.a.render(o.a.createElement(o.a.StrictMode,null,o.a.createElement(w,null)),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then((function(e){e.unregister()})).catch((function(e){console.error(e.message)}))}],[[8,1,2]]]);
//# sourceMappingURL=main.16f2c8b7.chunk.js.map